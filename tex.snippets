global !p
texMathZones = ['texMathZone'+x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', '    D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS',     'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z']]

texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(i for i in reversed(synstackids) if i in texIgnoreMathZoneIds or i in texMathZoneIds)
		return first != ignore
	except StopIteration:
		return False
endglobal

snippet template "Basic template" b
\documentclass[a4paper,12pt]{article}
\usepackage{geometry}
\geometry{a4paper,scale=0.7}
\usepackage[colorlinks,
           linkcolor=black,
           anchorcolor=blue,
           citecolor=green
           ]{hyperref}

\usepackage{fancyhdr}
\pagestyle{fancyplain}
\lhead{\emph{\nouppercase{\leftmark}}}
\rhead{$1}
\usepackage{titlesec}
\newcommand{\sectionbreak}{\clearpage}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{textcomp}
%\usepackage[english]{babel}
\usepackage{amsmath, amssymb,mathrsfs}
\usepackage{mathtools}

% A symbol for the quotient of two objects
%\usepackage{xfrac}
%\usepackage{faktor}
\newcommand{\sfrac}[2]{{\left.\raisebox{.2em}{$#1$}\middle/\raisebox{-.2em}{$#2$}\right.}}
\newcommand{\bsfrac}[2]{{\left.\raisebox{-.2em}{$#1$}\middle\backslash\raisebox{.2em}{$#2$}\right.}}
%appendices
\usepackage[titletoc]{appendix}

\usepackage{tikz-cd}


%cite
\usepackage{biblatex}
\addbibresource{mybib.bib}

% integral vraiable
\renewcommand{\d}{\,\mathrm{d}}

% figure support
\usepackage{import}
\usepackage{xifthen}
\newcommand{\incfig}[1]{%
  \def\svgwidth{\columnwidth}
  \import{./figures/}{#1.pdf_tex}
}



% Some shortcuts
\newcommand\N{\ensuremath{\mathbb{N}}}
\newcommand\R{\ensuremath{\mathbb{R}}}
\newcommand\Z{\ensuremath{\mathbb{Z}}}
\renewcommand\O{\ensuremath{\emptyset}}
\newcommand\Q{\ensuremath{\mathbb{Q}}}
\renewcommand\C{\ensuremath{\mathbb{C}}}
\newcommand\CP{\ensuremath{\mathbb{CP}}}
\newcommand\CR{\ensuremath{\mathbb{CR}}}
\newcommand\Sph{\ensuremath{\mathbb{S}}}

% Some theorem environment settings
\usepackage{ntheorem}
\theoremseparator{.}
\newtheorem{theorem}{Theorem}[section]
\newenvironment{proof}{{\noindent\itshape Proof}.}{\hfill $\square$\par}
\newtheorem*{remark}{Remark}
\newtheorem*{question}{Question}
\newtheorem{proposition}[theorem]{Proposition}
\newtheorem{corollary}[theorem]{Corollary}
\newtheorem{lemma}[theorem]{Lemma}
\theorembodyfont{\upshape}
\newtheorem{definition}[theorem]{Definition}
\newtheorem{exercise}{Exercise}[section]
\newtheorem*{solution}{Solution}
\newtheorem*{claim}{Claim}
\newtheorem{example}{Example}[section]
% Enumerate Style
\renewcommand{\labelenumi}{{\normalfont\alph{enumi}. }}

% Tensor
\usepackage{tensor}

\DeclareMathOperator{\order}{ord}
% bracket notations 
\DeclarePairedDelimiter\bra{\langle}{\rvert}
\DeclarePairedDelimiter\ket{\lvert}{\rangle}
\DeclarePairedDelimiterX\braket[2]{\langle}{\rangle}{#1 \delimsize\vert #2}

% Notations in differential geometry
% inner product
\DeclarePairedDelimiterX\ipd[2]{\langle}{\rangle}{#1\delimsize , #2}

% Notations in quantum field theory
% normal ordering
\newcommand{\normord}[1]{:\mathrel{#1}:}

% Real and imaginary parts
\DeclareMathOperator{\Realpart}{Re}
\renewcommand{\Re}{\Realpart}

\DeclareMathOperator{\Impart}{Im}
\renewcommand{\Im}{\Impart}


\DeclareMathOperator{\ddet}{det}
\renewcommand{\det}{\ddet}

% Groups
\DeclareMathOperator{\GL}{GL}
\DeclareMathOperator{\SL}{SL}

\begin{document}
\title{$1}
\author{{Based on lectures by $2}\\
\small Notes taken by Rieunity}
\date{$3}  
\maketitle


$0


%\bibliographystyle{plain}
%\bibliography{mybib}
%\printbibliography

\end{document}



endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet


snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
\] $0
endsnippet

snippet dn "Math" wA
\[
${1:${VISUAL}}
\] $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet

snippet eqn "equation" bA
\begin{equation}
	${1:${VISUAL}}
\end{equation}
endsnippet

snippet thm "Theorem" bA
\begin{theorem}
	${1:${VISUAL}}
\end{theorem}
endsnippet

snippet rmk "Remark" bA
\begin{remark}
	${1:${VISUAL}}
\end{remark}
endsnippet

snippet sol "Solution" bA
\begin{solution}
	${1:${VISUAL}}
\end{solution}
endsnippet

snippet prp "Proposition" bA
\begin{proposition}
	${1:${VISUAL}}
\end{proposition}
endsnippet

snippet crc "Corollary" bA
\begin{corollary}
	${1:${VISUAL}}
\end{corollary}
endsnippet

snippet lma "Lemma" bA
\begin{lemma}
	${1:${VISUAL}}
\end{lemma}
endsnippet

snippet def "Definition" bA
\begin{definition}
	${1:${VISUAL}}
\end{definition}
endsnippet

snippet exa "Example" bA
\begin{example}
	${1:${VISUAL}}
\end{example}
endsnippet

snippet prf "Proof" bA
\begin{proof}
	${1:${VISUAL}}
\end{proof}
endsnippet

snippet exe "Exercise" bA
\begin{exercise}
	${1:${VISUAL}}
\end{exercise}
endsnippet

snippet cd "Commutative Diagram" bA
\begin{tikzcd}
	${1:${VISUAL}}
\end{tikzcd}
endsnippet



context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet


snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

priority 1000
snippet math "mathematicablock" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "math" wr
`!p
import subprocess
code = match.group(1)
code = 'ToString[' + code + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet

snippet == "equals" iA
&= $1 \\\\
endsnippet

snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

context "math()"
snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet nmat "nmat" iA
\begin{matrix} $1 \end{matrix} $0
endsnippet

context "math()"
snippet smat "smat" iA
\begin{smallmatrix} $1 \end{smallmatrix} $0
endsnippet

context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

snippet sum "sum" w
\sum_{${1:n=1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet parz "partial z" w
\partial_{z}$0
endsnippet

context "math()"
snippet parb "partial zbar" w
\partial_{\overline{z}$1}$0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

snippet <= "leq" i
\le 
endsnippet

snippet >= "geq" i
\ge 
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet


context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

snippet R0+ "R0+" iA
\\R_0^+
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

priority 10
context "math()" 
snippet mca "mathcal" iA
\mathcal{$1}$0
endsnippet

priority 100
context "math()" 
snippet "([a-zA-Z])mca" "mathcal" riA
\mathcal{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet mrm "mathrm" iA
\mathrm{$1}$0
endsnippet

priority 100
context "math()" 
snippet "([a-zA-Z])mrm" "mathrm" riA
\mathrm{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet msc "mathscr" iA
\mathscr{$1}$0
endsnippet

priority 100
context "math()" 
snippet "([a-zA-Z])msc" "mathscr" riA
\mathscr{`!p snip.rv=match.group(1)`}
endsnippet

snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla 
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet 'pi' "pi" iA
\pi $0
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

priority 200
context "math()"
snippet <=> "Leftrightarrow" iA
\Leftrightarrow
endsnippet

priority 100
context "math()"
snippet => "Rightarrow" iA
\Rightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet


snippet ~~ "~" iA
\sim 
endsnippet

context "math()"
snippet set "set" wA
\left\\{$1\right\\} $0
endsnippet

snippet || "mid" iA
 \mid 
endsnippet


context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

context "math()"
snippet notin "not in " iA
\notin 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

snippet NN "n" iA
\N
endsnippet

snippet Nn "cap" iA
\cap 
endsnippet

snippet UU "cup" iA
\cup 
endsnippet

snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

snippet nnn "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet OO "emptyset" iA
\O
endsnippet

context "math()"
snippet RR "real" iA
\R
endsnippet

context "math()"
snippet QQ "Q" iA
\Q
endsnippet

context "math()"
snippet ZZ "Z" iA
\Z
endsnippet

context "math()"
snippet CC "C" iA
\C
endsnippet

context "math()"
snippet SS "S" iA
\Sph
endsnippet

context "math()"
snippet Sp "Spec" iA
\Spec
endsnippet

context "math()"
snippet CP "CP" iA
\mathbb{CP}
endsnippet

context "math()"
snippet RP "RP" iA
\mathbb{RP}
endsnippet

context "math()"
snippet <! "normal" iA
\triangleleft 
endsnippet

context "math()"
snippet <> "hokje" iA
\diamond 
endsnippet


context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

snippet SI "SI" iA
\SI{$1}{$2}
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $5
.\end{align*}$0
endsnippet

snippet elli "Elliptic function" bA
\begin{equation}
	\left\lbrace\begin{array}{lcr}
	Lu=f & & \text{ in } U\\\\
	u=0  & & \text{ on } \partial U
	\end{array}\right.
\end{equation} $0
endsnippet

snippet covc "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 1000
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 10000
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "wat" "wat" riA
\widehat{$1}$0
endsnippet

priority 100
context "math()"
snippet "(a-zA-Z)wat" "widehat" riA
\widehat{`!p snip.rv=match.group(1)`}
endsnippet

snippet letw "let omega" iA
Let $\Omega \subset \C$ be open.
endsnippet

snippet HH "H" iA
\mathbb{H}
endsnippet

snippet DD "D" iA
\mathbb{D}
endsnippet

context "math()"
snippet dd "dd" iA
\mathrm{d}
endsnippet

priority 10
context "math()"
snippet mbb "mathbb" iA
\mathbb{$1}$0
endsnippet

priority 100
context "math()" 
snippet "([a-zA-Z])mbb" "mathbb" riA
\mathbb{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet frak "mathfrak" iA
\mathfrak{$1}$0
endsnippet

context "math()"
snippet par "partial" i
\partial
endsnippet

context "math()"
snippet vph "varphi" iA
\varphi
endsnippet

context "math()"
snippet phii "phi" iA
\phi
endsnippet

context "math()"
snippet Phii "Phi" iA
\Phi
endsnippet

context "math()"
snippet psii "psi" iA
\psi
endsnippet

context "math()"
snippet Psii "Psi" iA
\Psi
endsnippet

context "math()"
snippet del "delta" iA
\delta
endsnippet

context "math()"
snippet Del "Delta" iA
\Delta
endsnippet

context "math()"
snippet Lam "Lambda" iA
\Lambda
endsnippet

context "math()"
snippet lam "lambda" iA
\lambda
endsnippet

context "math()"
snippet ome "omega" iA
\omega
endsnippet

context "math()"
snippet Ome "Omega" iA
\Omega
endsnippet

context "math()"
snippet gam "gamma" iA
\gamma
endsnippet

context "math()"
snippet Gam "Gamma" iA
\Gamma
endsnippet

context "math()"
snippet tau "tau" iA
\tau
endsnippet

priority 10
context "math()"
snippet eta "eta" iA
\eta
endsnippet

context "math()"
snippet sig "sigma" iA
\sigma
endsnippet

context "math()"
snippet alp "alpha" iA
\alpha
endsnippet

context "math()"
snippet bet "beta" iA
\beta
endsnippet

priority 100
context "math()"
snippet theta "theta" iA
\theta $0
endsnippet

priority 100
context "math()"
snippet zeta "zeta" iA
\zeta $0
endsnippet

context "math()"
snippet Thet "Theta" iA
\Theta
endsnippet

context "math()"
snippet Alp "Alpha" iA
\Alpha
endsnippet

context "math()"
snippet Bet "Beta" iA
\Beta
endsnippet

priority 100
context "math()"
snippet sfr "sfrac" iA
\sfrac{${1:\C}}{${2:\Lambda}}
endsnippet

priority 200
context "math()"
snippet bsfr "bsfrac" iA
\bsfrac{${1:\Gamma}}{${2:\mathcal{H}}}
endsnippet

priority 10 
context "math()"
snippet "ten" "tensor" ri
\tensor[$1]{$2}{$3}$0 
endsnippet

snippet tit "textit" i
\textit{$1} $0
endsnippet

priority 10
context "math()"
snippet "vec" "vector" riA
\mathbf{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])vec" "vector" riA
\mathbf{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "til" "tilde" riA
\widetilde{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])til" "tilde" riA
\widetilde{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet dag "dagger" wA
\dagger
endsnippet

priority 10
context "math()"
snippet "bra" "bra" riA
\bra{$1}$0
endsnippet

priority 10
context "math()"
snippet "ket" "ket" riA
\ket{$1}$0
endsnippet

priority 10
context "math()"
snippet "bkt" "braket" riA
\braket{$1}{$2}$0
endsnippet

priority 10
context "math()"
snippet "ipd" "inner product" riA
\ipd{$1}{$2}$0
endsnippet

context "math()"
snippet "noor" "normal ordering" riA
\normord{$1}$0
endsnippet

priority 10 
context "math()"
snippet "dos" "\cdots" riA
\cdots $0
endsnippet

priority 10 
context "math()"
snippet "dot" "dot" riA
\dot{$1} $0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])dot" "dot" riA
\dot{`\!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet bsl "backslash" iA
\backslash 
endsnippet

context "math()"
snippet eps "epsilon" iA
\epsilon 
endsnippet

context "math()"
snippet vep "varepsilon" iA
\varepsilon 
endsnippet

context "math()"
snippet ord "order" iA
\order
endsnippet

context "math()"
snippet Im "Im" iA
\Im
endsnippet

context "math()"
snippet Re "Re" iA
\Re
endsnippet

snippet sec "section" b
\section{$1}
$0
endsnippet

context "math()"
snippet exi "exists" iA
\exists
endsnippet

context "math()"
snippet forall "forall" iA
\forall
endsnippet

snippet quote "quote" iA
``$1'' $0
endsnippet

context "math()"
snippet arw "arrow" iA
\arrow[$1] $0
endsnippet

context "math()"
snippet GL "General linear group" iA
\GL
endsnippet

context "math()"
snippet SL "Special linear group" iA
\SL
endsnippet

context "math()"
snippet det "determinant" iA
\det
endsnippet

context "math()"
snippet Tor "Tor" iA
\Tor
endsnippet
# vim:ft=snippets
